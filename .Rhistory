Dougfreq %>% filter(book == book1) %>% select(proportion) %>% pull(),
Dougfreq %>% filter(book == book2) %>% select(proportion) %>% pull()
)
}
booknames <- unique(Dougfreq$book)
R <- matrix(NA,5,5,dimnames = list(booknames,booknames))
for(i in 1:5){
for(j in 1:i){
R[i,j] <- getCor(booknames[i],booknames[j])
}
}
cor.test(
c(1,2,3),c(3,2,1))
cor.test(c(1,2,3),c(3,2,1))
ls(cor.test(c(1,2,3),c(3,2,1))
)
cor.test(c(1,2,3),c(3,2,1))[["estimate"]]
getCor <- function(book1,book2){
cor.test(
Dougfreq %>% filter(book == book1) %>% select(proportion) %>% pull(),
Dougfreq %>% filter(book == book2) %>% select(proportion) %>% pull()
)[["estimate"]]
}
booknames <- unique(Dougfreq$book)
R <- matrix(NA,5,5,dimnames = list(booknames,booknames))
for(i in 1:5){
for(j in 1:i){
R[i,j] <- getCor(booknames[i],booknames[j])
}
}
R
R <- matrix(NA,5,5,dimnames = list(booknames,booknames))
for(i in 1:5){
for(j in 1:(i-1)){
R[i,j] <- getCor(booknames[i],booknames[j])
}
}
R <- matrix(NA,5,5,dimnames = list(booknames,booknames))
for(i in 2:5){
for(j in 1:(i-1)){
R[i,j] <- getCor(booknames[i],booknames[j])
}
}
R
diag(R) = 1
R
lower.tri(R)
upper.tri(R)
diag(R) <- 1
upper.tri(R) <- lower.tri(R)
upper.tri(R)
R[upper.tri(R)] <- R[lower.tri(R)]
R
R[upper.tri(R)] <- t(R[lower.tri(R)])
R
R <- matrix(0,5,5,dimnames = list(booknames,booknames))
for(i in 2:5){
for(j in 1:(i-1)){
R[i,j] <- getCor(booknames[i],booknames[j])
}
}
diag(R) <- 1
R
t(R[lower.tri(R)])
R <- matrix(NA,5,5,dimnames = list(booknames,booknames))
for(i in 2:5){
for(j in 1:(i-1)){
R[i,j] <- getCor(booknames[i],booknames[j])
}
}
diag(R) <- 1
R[upper.tri(R)] <- t(R[lower.tri(R)])
R
R %>% round(2)
?upper.tri
R <- matrix(0,5,5,dimnames = list(booknames,booknames))
for(i in 2:5){
for(j in 1:(i-1)){
R[i,j] <- getCor(booknames[i],booknames[j])
}
}
R[upper.tri(R)]
R
R + t(R)
diag(R) <- 1
spread(R)
require(reshape2)
meltR <- melt(R)
ggplot(data = meltR, aes(x = Var1, y = Var2, fill = value)) + geom_tile()
meltR
R <- R + t(R)
booknames <- unique(Dougfreq$book)
R <- matrix(0,5,5,dimnames = list(booknames,booknames))
for(i in 2:5){
for(j in 1:(i-1)){
R[i,j] <- getCor(booknames[i],booknames[j])
}
}
R <- R + t(R)
diag(R) <- 1
meltR <- melt(R)
ggplot(data = meltR, aes(x = Var1, y = Var2, fill = value)) + geom_tile()
ggplot(data = meltR, aes(x = Var1, y = Var2, fill = value)) + geom_tile() + opts(axis.text.x=theme_text(angle=-90))
ggplot(data = meltR, aes(x = Var1, y = Var2, fill = value)) + geom_tile() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = meltR, aes(x = Var1, y = Var2, fill = value)) + geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "New plot title", xlab = "", ylab = "" ) +
guides(fill = guide_legend(title = "Correlation"))
ggplot(data = meltR, aes(x = Var1, y = Var2, fill = value)) + geom_tile() +
+   theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
+   labs(title = "New plot title", xlab = "", ylab = "" ) +
+   guides(fill = guide_legend(title = "Correlation"))
ggplot(data = meltR, aes(x = Var1, y = Var2, fill = value)) + geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "New plot title", xlab = "", ylab = "" ) +
guides(fill = guide_legend(title = "Correlation"))
ggplot(data = meltR, aes(x = Var1, y = Var2, fill = value)) + geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Book Correlation Heat Map", x = "", y = "" ) +
guides(fill = guide_legend(title = "Correlation"))
ggplot(data = meltR, aes(x = Var1, y = Var2, fill = value)) + geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Book Correlation Heat Map", x = "", y = "" ) +
guides(fill = guide_legend(title = "Correlation"))
ggplot(data = meltR, aes(x = Var1, y = Var2, fill = value)) + geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Book Correlation Heat Map", x = "", y = "" ) +
guides(fill = guide_legend(title = "Correlation"))
ggplot(data = meltR, aes(x = Var1, y = Var2, fill = value)) + geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Book Correlation Heat Map", x = "", y = "" ) +
guides(fill = guide_legend(title = "Correlation"))
+ theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(data = meltR, aes(x = Var1, y = Var2, fill = value)) + geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Book Correlation Heat Map", x = "", y = "" ) +
guides(fill = guide_legend(title = "Correlation")) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(data = meltR, aes(x = Var1, y = Var2, fill = value)) + geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Book Correlation Heat Map", x = "", y = "" ) +
guides(fill = guide_legend(title = "Correlation")) +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(data = meltR, aes(x = Var1, y = Var2, fill = value)) + geom_tile() +
labs(title = "Book Correlation Heat Map", x = "", y = "" ) +
guides(fill = guide_legend(title = "Correlation")) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = meltR, aes(x = Var1, y = Var2, fill = value)) + geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Book Correlation Heat Map", x = "", y = "" ) +
guides(fill = guide_legend(title = "Correlation"))
+ theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5))
ggplot(data = meltR, aes(x = Var1, y = Var2, fill = value)) + geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Book Correlation Heat Map", x = "", y = "" ) +
guides(fill = guide_legend(title = "Correlation"))
+ theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5))
ggplot(data = meltR, aes(x = Var1, y = Var2, fill = value)) + geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Book Correlation Heat Map", x = "", y = "" ) +
guides(fill = guide_legend(title = "Correlation"))
+ theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + theme(plot.title = element_text(hjust = 0.5))
ggplot(data = meltR, aes(x = Var1, y = Var2, fill = value)) + geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Book Correlation Heat Map", x = "", y = "" ) +
guides(fill = guide_legend(title = "Correlation"))
+ theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + theme_update(plot.title = element_text(hjust = 0.5))
dev.off()
ggplot(data = meltR, aes(x = Var1, y = Var2, fill = value)) + geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Book Correlation Heat Map", x = "", y = "" ) +
guides(fill = guide_legend(title = "Correlation"))
+ theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + theme_update(plot.title = element_text(hjust = 0.5))
ggplot(data = meltR, aes(x = Var1, y = Var2, fill = value)) + geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Book Correlation Heat Map", x = "", y = "" ) +
guides(fill = guide_legend(title = "Correlation")) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5))
ggplot(data = meltR, aes(x = Var1, y = Var2, fill = value)) + geom_tile() +
scale_colour_brewer(palette="BuPu", direction=-1) +
labs(title = "Book Correlation Heat Map", x = "", y = "" ) +
guides(fill = guide_legend(title = "Correlation")) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = meltR, aes(x = Var1, y = Var2, fill = value)) + geom_tile() +
scale_colour_brewer(palette="BuPu", direction=1) +
labs(title = "Book Correlation Heat Map", x = "", y = "" ) +
guides(fill = guide_legend(title = "Correlation")) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = meltR, aes(x = Var1, y = Var2, colour = value)) + geom_tile() +
scale_colour_brewer(palette="BuPu", direction=-1) +
labs(title = "Book Correlation Heat Map", x = "", y = "" ) +
guides(fill = guide_legend(title = "Correlation")) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = meltR, aes(x = Var1, y = Var2, colour = value)) + geom_tile() +
scale_colour_brewer(direction=-1) +
labs(title = "Book Correlation Heat Map", x = "", y = "" ) +
guides(fill = guide_legend(title = "Correlation")) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = meltR, aes(x = Var1, y = Var2, fill = value)) + geom_tile() +
scale_colour_gradient(low = "red", high = "white") +
labs(title = "Book Correlation Heat Map", x = "", y = "" ) +
guides(fill = guide_legend(title = "Correlation")) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle = 90, hjust = 1))
sentiments
table(sentiments[["lexicon"]])
sentiments[12000,]
sentiments[12001,]
sentiments[12002,]
sentiments[12002:12009,]
sentiments %>% filter(lexicon == "nrc")
sentiments %>% filter(lexicon == "nrc") %>% pull(word)
sentiments %>% filter(lexicon == "nrc") %>% pull(word) %>% unique() %>% count()
sentiments %>% filter(lexicon == "nrc") %>% pull(word) %>% unique()
sentiments %>% filter(lexicon == "nrc") %>% pull(word) %>% unique() %>% length
sentiments %>% filter(lexicon == "loughran")
Dougwords
table(Dougwords[,1])
sentiments %>% filter(lexicon == "nrc") %>% unique()
sentiments %>% filter(lexicon == "nrc") %>% pull(sentiment) %>% unique()
nrcsurprise <- sentiments %>% filter(lexicon == "nrc", sentiment == "surprise")
Dougwords %>% inner_join(nrcsurprise) %>% count(word, sort = TRUE)
nrcdisgust <- sentiments %>% filter(lexicon == "nrc", sentiment == "disgust")
Dougwords %>% inner_join(nrcdisgust) %>% count(word, sort = TRUE)
nrcfear <- sentiments %>% filter(lexicon == "nrc", sentiment == "disgust")
Dougwords %>% inner_join(nrcfear) %>% count(word, sort = TRUE)
nrcfear <- sentiments %>% filter(lexicon == "nrc", sentiment == "disgust")
Dougwords %>% inner_join(nrcfear) %>% count(word, sort = TRUE)
Dougsentiment <- Dougwords %>%
inner_join(sentiments %>% filter(lexicon == "bing")) %>%
count(book, index = bookline %/% 80, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentimet = positive - negative)
Dougsentiment <- Dougwords %>%
inner_join(sentiments %>% filter(lexicon == "bing"), by = "word") %>%
count(book, index = bookline %/% 80, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentimet = positive - negative)
Dougsentiment
Dougsentiment <- Dougwords %>%
inner_join(sentiments %>% filter(lexicon == "bing"), by = "word") %>%
count(book, index = bookline %/% 80, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
Dougsentiment
ggplot(Dougsentiment, aes(index, sentiment, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x")
ggplot(Dougsentiment, aes(index, sentiment, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x")
unique(Dougsentiment$book)
table(Dougwords$book)
SoLong <- Dougwords %>% filter(book = "So Long, and Thanks for All the Fish")
SoLong <- Dougwords %>% filter(book == "So Long, and Thanks for All the Fish")
SoLong <- Dougwords %>% filter(book == "So Long, and Thanks for All the Fish")
afinn <- SoLong %>%
inner_join(sentiments %>% filter(lexicon == "afinn")) %>%
group_by(index = bookline %/% 80) %>%
summarise(sentiment = sum(score)) %>%
mutate(method = "AFINN")
bingNRC <- bind_rows(SoLong %>% inner_join(sentiments %>% filter(lexicon == "bing")) %>% mutate(method = "bing"),
SoLong %>% inner_join(sentiments %>% filter(lexicon == "nrc") %>% filter(sentiment %in% c("positive","negative"))) %>% mutate(method = "NRC"))
bind_rows(afinn, bingNRC) %>%
ggplot(aes(index, sentiment, fill = method)) +
geom_col(show.legend = FALSE) +
facet_wrap(~method, ncol = 1, scales = free_y)
bind_rows(afinn, bingNRC) %>%
ggplot(aes(index, sentiment, fill = method)) +
geom_col(show.legend = FALSE) +
facet_wrap(~method, ncol = 1, scales = "free_y")
afinn
bingNRC
afinn <- SoLong %>%
inner_join(sentiments %>% filter(lexicon == "afinn")) %>%
group_by(index = bookline %/% 80)
afinn
sentiments %>% filter(lexicon == "afinn")
sentiments
afinn <- SoLong %>%
inner_join(sentiments %>% filter(lexicon == "AFINN")) %>%
group_by(index = bookline %/% 80) %>%
summarise(sentiment = sum(score)) %>%
mutate(method = "AFINN")
afinn
SoLong <- Dougwords %>% filter(book == "So Long, and Thanks for All the Fish")
afinn <- SoLong %>%
inner_join(sentiments %>% filter(lexicon == "AFINN")) %>%
group_by(index = bookline %/% 80) %>%
summarise(sentiment = sum(score)) %>%
mutate(method = "AFINN")
bingNRC <- bind_rows(SoLong %>% inner_join(sentiments %>% filter(lexicon == "bing")) %>% mutate(method = "bing"),
SoLong %>% inner_join(sentiments %>% filter(lexicon == "nrc") %>% filter(sentiment %in% c("positive","negative"))) %>% mutate(method = "NRC"))
bind_rows(afinn, bingNRC) %>%
ggplot(aes(index, sentiment, fill = method)) +
geom_col(show.legend = FALSE) +
facet_wrap(~method, ncol = 1, scales = "free_y")
afinn
bingNRC
bingNRC <- bind_rows(SoLong %>% inner_join(sentiments %>% filter(lexicon == "bing")) %>% mutate(method = "bing"),
SoLong %>% inner_join(sentiments %>% filter(lexicon == "nrc") %>% filter(sentiment %in% c("positive","negative"))) %>% mutate(method = "NRC")
) %>%
count(method, index = linenumber %/% 80, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
bingNRC <- bind_rows(SoLong %>% inner_join(sentiments %>% filter(lexicon == "bing")) %>% mutate(method = "bing"),
SoLong %>% inner_join(sentiments %>% filter(lexicon == "nrc") %>% filter(sentiment %in% c("positive","negative"))) %>% mutate(method = "NRC")
) %>%
count(method, index = bookline %/% 80, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
bind_rows(afinn, bingNRC) %>%
ggplot(aes(index, sentiment, fill = method)) +
geom_col(show.legend = FALSE) +
facet_wrap(~method, ncol = 1, scales = "free_y")
sentiment %>%
filter(lexicon == "AFINN") %>%
count(sentiment)
sentiments %>%
filter(lexicon == "nrc", sentiment %in% c("positive", "negative")) %>%
count(sentiment)
sentiments %>%
filter(lexicon == "AFINN") %>%
count(sentiment)
sentiments %>%
filter(lexicon == "bing") %>%
count(sentiment)
sentiments %>% filter(lexicon == "AFINN")
sentiments %>%
filter(lexicon == "AFINN") %>%
count(score <0)
sentiments %>%
filter(lexicon == "AFINN") %>%
count(score > 0)
nrcvalence <- sentiments %>%
filter(lexicon == "nrc", sentiment %in% c("positive", "negative")) %>%
count(sentiment)
afinnvaluence <- sentiments %>%
filter(lexicon == "AFINN") %>%
count(score > 0)
bingvalence <- sentiments %>%
filter(lexicon == "bing") %>%
count(sentiment)
cbind(nrcvalence, afinnvalence, bingvalence)
nrcvalence <- sentiments %>%
filter(lexicon == "nrc", sentiment %in% c("positive", "negative")) %>%
count(sentiment)
afinnvaluence <- sentiments %>%
filter(lexicon == "AFINN") %>%
count(score > 0)
bingvalence <- sentiments %>%
filter(lexicon == "bing") %>%
count(sentiment)
cbind(nrcvalence, afinnvalence, bingvalence)
afinnvalence <- sentiments %>%
filter(lexicon == "AFINN") %>%
count(score > 0)
bingvalence <- sentiments %>%
filter(lexicon == "bing") %>%
count(sentiment)
cbind(nrcvalence, afinnvalence, bingvalence)
cbind(nrcvalence, afinnvalence$n, bingvalence$n)
to_print <- cbind(nrcvalence, afinnvalence$n, bingvalence$n)
class(to_print)
dimnames(to_print)
to_print <- cbind(nrcvalence, afinnvalence$n, bingvalence$n)
dimnames(to_print) <- list("", c("Sentiment","nrc","AFINN","bing"))
dimnames(to_print) <- list(NULL, c("Sentiment","nrc","AFINN","bing"))
dimnames(to_print) <- list(c("",""), c("Sentiment","nrc","AFINN","bing"))
dimnames(to_print) <- list(c(""," "), c("Sentiment","nrc","AFINN","bing"))
to_print
dimnames(to_print) <- list(c(NULL,NULL), c("Sentiment","nrc","AFINN","bing"))
dimnames(to_print) <- list(c(NA,NA), c("Sentiment","nrc","AFINN","bing"))
to_print <- cbind(nrcvalence, afinnvalence$n, bingvalence$n)
dimnames(to_print) <- list(c(""," "), c("Sentiment","nrc","AFINN","bing"))
kable(to_print)
to_print <- cbind(nrcvalence$n, afinnvalence$n, bingvalence$n)
dimnames(to_print) <- list(c("Count of Negative Words","Count of Positive Words"), c("nrc","AFINN","bing"))
kable(to_print)
Dougsentiment2 <- Dougwords %>%
inner_join(sentiments %>% filter(lexicon == "nrc", sentiment %in% c("positive","negative")), by = "word") %>%
count(book, index = bookline %/% 80, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
ggplot(Dougsentiment2, aes(index, sentiment, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x")
sentiments %>% filter(lexicon == "nrc") %>% pull(sentiment) %>% unique
sentiments %>% filter(lexicon == "nrc") %>% pull(sentiment) %>% table
nrcAnger <- sentiments %>% filter(lexicon == "nrc", sentiment == "anger")
nrcAngerCount<- Dougwords %>% inner_join(nrcAnger) %>% count(word, sort = TRUE)
wordcloud(
words = nrcAngerCount$word, freq = nrcAngerCount$n,
max.words = 50,
random.order = FALSE, rot.per = .35,
colors = brewer.pal(8,"Dark2")
)
dimnames(R)
booknames <- unique(Dougfreq$book)
R <- matrix(0,5,5,dimnames = list(c("Hitchhiker","Restaurant","So Long", "Life", "Mostly"),booknames))
meltR <- melt(R)
ggplot(data = meltR, aes(x = Var1, y = Var2, fill = value)) + geom_tile() +
scale_colour_gradient(low = "red", high = "white") +
labs(title = "Book Correlation Heat Map", x = "", y = "" ) +
guides(fill = guide_legend(title = "Correlation")) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle = 90, hjust = 1))
booknames <- unique(Dougfreq$book)
R <- matrix(0,5,5,dimnames = list(c("Hitchhiker","Restaurant","So Long", "Life", "Mostly"),booknames))
for(i in 2:5){
for(j in 1:(i-1)){
R[i,j] <- getCor(booknames[i],booknames[j])
}
}
R <- R + t(R)
diag(R) <- 1
meltR <- melt(R)
ggplot(data = meltR, aes(x = Var1, y = Var2, fill = value)) + geom_tile() +
scale_colour_gradient(low = "red", high = "white") +
labs(title = "Book Correlation Heat Map", x = "", y = "" ) +
guides(fill = guide_legend(title = "Correlation")) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle = 90, hjust = 1))
list.files()
?render
render("Text Mining the Hitchhiker Trilogy.Rmd, clean = FALSE")
require(rmakrdown)
require(rmarkdown)
render("Text Mining the Hitchhiker Trilogy.Rmd, clean = FALSE")
render("Text Mining the Hitchhiker Trilogy.Rmd", clean = FALSE)
warnings()
?purl
list.files()
purl("Text Mining the Hitchhiker Trilogy.Rmd")
?purl
purl("Text Mining the Hitchhiker Trilogy.Rmd", output = "~")
list.files()
knit(input = "Text Mining the Hitchhiker Trilogy.Rmd", output = "~/Text Mining the Hitchhiker Trilogy.Rmd")
warnings()
bing_sentiments <- Dougwords %>%
inner_join(sentiments %>% filter(lexicon == "bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
bing_sentiments
Dougwords %>%
inner_join(sentiments %>% filter(lexicon == "bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup() %>%
group_by(sentiment)
Dougwords %>%
inner_join(sentiments %>% filter(lexicon == "bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup() %>%
#group_by(sentiment)
Dougwords %>%
inner_join(sentiments %>% filter(lexicon == "bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup() %>%
#group_by(sentiment)
Dougwords %>%
inner_join(sentiments %>% filter(lexicon == "bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup() #%>%
Dougwords %>%
inner_join(sentiments %>% filter(lexicon == "bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup() %>%
top_n(10)
Dougwords %>%
inner_join(sentiments %>% filter(lexicon == "bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup() %>%
group_by(sentiment) %>%
top_n(10) %>%
ungroup() %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word,n,fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment",
x = NULL) +
coord_flip()
Dougwords %>%
inner_join(sentiments %>% filter(lexicon == "bing")) %>%
count(word, sentiment, sort = TRUE) %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("#F8766D", "#00BFC4"),
max.words = 100)
